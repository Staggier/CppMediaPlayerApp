<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AppLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAADR9JREFUeF7t
        nUurJVcVgK8PJGPRP+DAgSAi/gBB7uU6uAMxA2lIdGBMQ0aB7oGO4oNuGlQUDbSdxAea6EARgxgyaxR8
        hEakW0RBMemBD5DOpNUQiR73t+9elX2rV9Wpx36sqnM2fJx71qnau2qvtddj1+k+B8ePnuwMDz1x6z2f
        eOLWFccNxx3HKwH+RnaFY7Rz14oqXBMfunz9zQ9fu/VWp9yLjhcdmy1wzBXO0fpbG6pwLbzr4W/f55T5
        gIPVrSm7D855YO2GoArXgFPekeN5By5eU3Av55/6La+cSx9HeBJtnKWjCpdMFOeJ6/codiJ3Hrp28+k1
        5geqcImMjPNToe+LawoLqnBJzIzzU/H5AWNr17QkVOFScEo4wjW710lxfiavhLGPtGtbCqrQOpni/GhC
        osg1LHb/QBVapVCcn8oi8wNVaI0Q56WsY7JruPwhNGXjUvIDVWgJXGvFOD8KQoLsHyylbFSFFgjunjhv
        0d0PxecHlsOCKqxJUHzpsi43GLHJbWVVWAO2Wt0kzdq+XQDmtpVVYWmiOF+1rMuNlI2W8gNVWIrg7q2W
        dbkxUTaqwtxU2r41RVQxVN1WVoW52JE4P4Vm/6B0fqAKc0DMczdYffvWOMW3lVVhSnY8zo8mhIVi+YEq
        TME+ziche36gCucSlXX7OD+frI+dVeFU9nE+K1nyA1U4ln2cL0rS/EAVDiXE+fgxrTk+fu1mA++l/r7w
        nd+fIarL7znHGBJWfdk4Nz9QhUOwGudFcaLkz/3wj5tv/vSlzY9//dfNL//wt83Nl17e/Onv/9z85c6/
        z4CMzziGYzmHc8U4rBlEMNbZj51VYRdsUgR3b/IxLZOC0n7wiz97ZaLYf7362mZq41z6oC/6pG8xBm38
        GgRDQBeTHjurQo2wi2eqrBNFiNJZxXMUvq3RtxgDniG+BiP4snHMbqIqbBNiPUmeCXfPpMtqv/67f2xe
        vvtqUFG5xpiMbcUrBE8A6OjiUCNQhW3oMHR8ZtBaiOJzrvahjWsQQ9CutRLeCDRdtlGFMaG2rx7vWWG4
        XRK0Git+W+OauDau0UhYeHFIcqgKBdxIyPS1AYrypedOY7z1xjVyrdo9lIBQcO4rNzbv/eSPNm86+cLT
        28pEVQhe+aerv9quXrzqLbj7oY1rLe0NJA95/6ef37z9/Hc3B+ee2tz30W/99w3Hl9+t6VdQhYLrmHJP
        HTA3onyy7qU2rj23EUjyd3LlZ5t3Pvp9r/iDjzx5+nrKY5puBVUIoeyrssPHhJFULcHlb2vcA/eSywjE
        3bPaW4o/5fjys31hQBVC2PApXvOL8tmAWUvjXlLmBRLnY3ffw42D+x/v3CBShVDLANamfGliBHM8gcR5
        3H2jeG3Vn2UZBrDGld9u3NuccNAT5/tYhgGQLK0h5m9rGMGYxDAu6zrjfD/2DWDp2f7YJtWBNheCVtZN
        xLYBcJPUzLvWuGdtPibG+T7sGgA3SmK0pE2eVI171pJC3D1xfqK717BrALsS97sa9y6hYGac78OuAdRy
        /f957X9+BfIAB/gbWY3GHCSI833YMwDcHuVQqad6KJjVxmNbvuqF62X8GGR8xjEcm9sg6J+xiPVeUWlX
        fYw9AyDR4eZzNwyMcVCuuFqMrw+O4VjO4dwcRoqBPfKNn5+u+nyKF2wZAJPMisuZ+NE3ymMcGbN9HduQ
        c+iDvlJcr+wG+s0cFJ9f+WDPA+Rc/TLJUk5p44+BPuiLPqfuUmI8fI+QWO+VUkbxgh0DkNWfK/bnfPyK
        EdD32A0rvmZ+7qvXc2T3Q7FlAKyEHI2JzqX8GMZgrG2NOH/xmRdKxfk+7BgAq4iJSd2GbK2mpM8T4N2+
        9txvSsf5PmwYgLj/1Mnf2IcrKWAsxoxzAso6qen9xNdXvGDHAFK7f4yJ5Kyk8gFPxitjcw14g8pxvg8b
        BsCkjU2gtjWqCVFGaRiX7VsU37h7XQG1sWEAbZc5txFrCSmlVz8wZrN9ayPO91HfAJiw1PGf1a+NlQtW
        PPeR5DGtGE2MdlwX4863YQDss6dqpWM/4yR7TOvO5akfoUNoEseBcHx8Pv31XJMNA0j55I9SskTZJ3E+
        6WNa18dj3/uVvw954ERyrB7bgSTTcj79mTYAGLJ5MrSVcP8YbRPn9YmdjBiAtKkGIM28AaSuAAgnOdx/
        HOd9Zs8EJlr1MZ0GEB/Xdb5732kAreMCdQ2ASYVUO4C4vRzxn/5yfSsHY6JfoZ0P4dHizxvj6zi//TCN
        ncf489b59T1AyhKQBDBl+SdxPpe7BxRO2Sq0qyGMOv6ccCklJq+8jz+X2C+N/uLPGS8av64BoKiUBsAN
        YgDaWGOI3f3ssm4LYxNgwmVsAGPDZyunWJcHmGsAKJ5XFP+Oj13dvOXk85uDDz8eT1hyShsA40Xjr8sD
        zA0BUs97xX/gM543Hl86fZ/JA+x0CIDaSaDEeRKkt93/xc3B4WdPlc9rBIbgvUFiQ9jpJJDJhxplIONy
        HAke7r5L8WdwnzdhIZUh0E/ETpWBQsmNIBTPq8R5v7K3KV4hS37glNNpAAPpNADlWEd9A2AVltoKFnd/
        Js4ryh1KjvxADEBi+VQDkPMXYQDtuDenkfS084DY3ffF+amkzA+I0/HDHK5ZO64Ljo/Ppz/TBgC5HgeL
        4ue6+0HE+YE+2cNAWW2047oYd74NA0hZCtIodzAqFP++R76eV/EKZxLFfgXUxoYBsFJTVgI0YqF39wUV
        3xC8QbOFbNcIbBgAbrqdvc5teIEPfuqZagbA2FwDhk0s3n8ptAcMIHUeQKO89DV+SSNwYzFmXNqSkVPp
        NAmdHUOwYQBAGMjxD0OKhgI3BmN1eTM8wv4fhnSQIwxIY9KzG0FQPmNtaxj6/p+GKRAGWCU5GsaVLRy4
        Pul7rAETJirnB7Y8ALQfZqRsJGQkZ8nKQtcHfdHn1CqGvAfD8Rs2KKWsIdjyALmSwbhJHGZ/QJQ4yhii
        4+mDvlJ4LfZBuPcmP9AVlhpbBgAkgzm9gDTiMMpj9fr8IFZuF+4YjuUczk25eSUNT7Kz/0WMkDMXaDfG
        IRaj0PNf/olXLiubmA78jYzPOIZjc3ooGmUji2Dsc4AJ2DEAVj6vsm/ffixaqqFcjILVDfydW+FdjTlI
        8nyhGxsGgPLbj2lxtfFmyq417l1KVxJNPy/pQ0J9AyDxw9WdicPhFddbKhRYatwz997MRcBXL4keOwfq
        GAArHsUPeUxbKxTUbP5LHMpcCAnDQlkDiOP8oMe07jNuNtcOocXGvYrrV+cE3GeJwkI5A5A4z4aHxHn1
        5tq44/ASu5APcI/c6+C5ccwMC/kNQNy9GueHwLEOPEbq7wxYatwb9zhqbiImGkI+AxgT57eyciOYq/yY
        kflBPgPA3XNTo9z9ANZmBCmVL4zID6YZQNcPR8ZxfmsiMwMmbA05AfeQWvkxW8PC1B+ODAbAz8Y3ipc4
        75MYLiDTTfl+HYyz1OqArV6ufWzCN5UeQ5j207HgFH/k8D8enSTOjyEYAW6OmnlJm0Vca7PFW2KuIuL8
        gO8gzPrxaPn5+FT/ymYSYUx2zZYQErhGv8MXXXtpJD+Y9fPxAhbkOr1d62Ya3PjkHKysHI9o5zauiWvL
        mReN5Pa21Q+qsI3r7ILjbtR5HcLEklTlelY/tnENXItP9KJrrAy6uqDpso0qbIMbocPQsTZgWdwk4+bE
        EHJ803hbky+bcA3F8qJheOVvc/2CKtQgH3AdP+h4IQxUnzDpJKd8mYPv5edMFumbMRgreyU0DXTzILrS
        dKihCvtgU8ENcslxOwxaH5TgIPFhRaIgSjA2YOYYBOfSB33RJ303ybAtxaOLS30bPl2owj7EukgwyDLd
        wDbCAohiHLhlEjIxCBI0XDbKJFMHlAvyns84hmNF4fTRuHhbSoe76ECSvTErX1CFQwm5waHDTlhoExkF
        76VEQrExyLyi2+eE8wzCnB8OjfVdqMKxhLBAkmgnLPTRVrBdJWswxxemuHsNVTiVsGdgKz9YDz7OD6nt
        x6AK50Ac8oZwfPlZd8F28oPlcjfM5aE233NRhXPBCEJ+YKtsXB6+rJsb5/tQhSlZXH5gg6Rxvg9VmIOQ
        H1x17MNCN8zN1dRxvg9VmBN3g4f7/OAemjg/pZafgyrMzT4/OEP2ON+HKiwBlr7j+YEv60rE+T5UYSkw
        gqZs3J38oHic70MV1sB7hNfzA23ilk+lON+HKqxJCAtryw98nK/t7jVUYW18knhqCEvfVvZx3oq711CF
        FhA3yeSZe+y8nTOPaS2jCi2BIYSy0fZj59fhGmc/pi2FKrSITxJtl41cU5Ht25SoQuuEstFKfkBoMh3n
        +1CFS8FNfM1t5WrbtylRhUui0rayL+uWEuf7UIVLpFB+sMg434cqXDIhP0i9rWxq+zYlqnANOIWlyA9W
        Eef7UIVrYWZ+4OP8mty9hipcGyE/GFo2ckz1x7SlUIVrJdo/YHVLaOAVkC22np/GycH/AeN0Tjyjq7uh
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>